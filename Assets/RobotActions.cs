//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/RobotActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @RobotActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @RobotActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""RobotActions"",
    ""maps"": [
        {
            ""name"": ""RobotControl"",
            ""id"": ""22e67eea-4e62-448f-812d-99a9b57f59d6"",
            ""actions"": [
                {
                    ""name"": ""RotateArmUp"",
                    ""type"": ""Button"",
                    ""id"": ""89212b74-d5bf-4a47-9597-f201fb895a90"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExtendArm"",
                    ""type"": ""Button"",
                    ""id"": ""8980ec04-06a7-44d4-85a7-e5032ba8f7a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArmHome"",
                    ""type"": ""Button"",
                    ""id"": ""d8f63fa6-c07f-423b-9240-50b7b839776c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArmGridLevel1"",
                    ""type"": ""Button"",
                    ""id"": ""650e67d4-b254-49b0-a53b-56a4f942f50c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArmGridLevel2"",
                    ""type"": ""Button"",
                    ""id"": ""8580493f-6041-495e-9e62-05e4c5d75c6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArmGridLevel3"",
                    ""type"": ""Button"",
                    ""id"": ""2fceef5f-8b1f-494f-abd5-a58d3db64ccf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArmFloorPickup"",
                    ""type"": ""Button"",
                    ""id"": ""661ab50a-9860-499d-b986-130839fadb76"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArmSubstationPickup"",
                    ""type"": ""Button"",
                    ""id"": ""2f50d07e-9ddb-4793-b5e7-f8f421535d5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleClaw"",
                    ""type"": ""Button"",
                    ""id"": ""7bbaca53-e9ae-4e0c-be3e-3b484b6c8201"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AutoSteer"",
                    ""type"": ""Button"",
                    ""id"": ""a323ab9b-1ad5-4f08-aba4-a7921e1d5f1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drive2"",
                    ""type"": ""Button"",
                    ""id"": ""1c9ac0e1-05f4-4b35-b3e9-5ae03e3f7819"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn"",
                    ""type"": ""Button"",
                    ""id"": ""afd07d66-2ca1-4e0b-8122-c8fa82fcec9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn2"",
                    ""type"": ""Button"",
                    ""id"": ""0b9b5be8-f78f-4088-958b-c3f69d3a12f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""8f988931-3928-42f6-be0e-5e72b0ae635b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateArmUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""99163b50-c93e-4b6b-9eb7-c85df199211c"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Operator"",
                    ""action"": ""RotateArmUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""90bcfed7-5189-425f-baf5-c6c546263e2a"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Operator"",
                    ""action"": ""RotateArmUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b7183b79-bf4d-414a-a2df-66f657699ba9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExtendArm"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""c19ee8d9-fedc-4549-9230-090787f2e8ab"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Operator"",
                    ""action"": ""ExtendArm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cb04093e-cb49-4564-91c5-1f86af614f83"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Operator"",
                    ""action"": ""ExtendArm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cd8911f2-ef50-4701-b662-a6381f44f505"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmHome"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50beb03d-4a3d-4eea-85fa-1ae609468585"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmGridLevel1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb1d828e-d089-4112-9ab2-2b70092755fb"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmGridLevel2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd1b68af-4cb1-45ea-b9e4-3acb905a79e2"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmGridLevel3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66d08402-4bf5-443d-876f-6983a1bfeb95"",
                    ""path"": ""<HID::Unknown Xbox Adaptive Controller>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmGridLevel3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed662f1b-3d22-4bd4-93ec-981561f8d23a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmFloorPickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fb85cb4-af96-466e-b1a2-f13a72ccbb16"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArmSubstationPickup"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2511fb8-a29e-477b-9a37-ec0cd35d3e0a"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleClaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""610bfd4d-763a-4034-85aa-7b723103fd21"",
                    ""path"": ""<HID::Logitech Logitech Dual Action>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Driver"",
                    ""action"": ""AutoSteer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""b5014c3e-485b-4dda-a7c7-4594d6870fd6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""db74b7db-3a6c-4ad3-9b80-429887ccc772"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drive2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d6586994-5735-4145-84d6-b9cff5fb3667"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Driver"",
                    ""action"": ""Drive2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""40a697a3-9e13-46f3-ad83-c69363c873d8"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Turn"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f5b94395-2732-4495-8d22-05a24210d502"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Driver"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a4f8c81f-b5ed-430b-abd9-b30b07ee6280"",
                    ""path"": ""<HID::Logitech Logitech Dual Action>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Driver"",
                    ""action"": ""Turn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7ace1e72-55ca-440d-b966-e85003d55834"",
                    ""path"": ""<HID::Logitech Logitech Dual Action>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Driver"",
                    ""action"": ""Turn2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Operator"",
            ""bindingGroup"": ""Operator"",
            ""devices"": [
                {
                    ""devicePath"": ""<HID::Logitech Logitech Dual Action>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Driver"",
            ""bindingGroup"": ""Driver"",
            ""devices"": [
                {
                    ""devicePath"": ""<HID::Logitech Logitech Dual Action>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // RobotControl
        m_RobotControl = asset.FindActionMap("RobotControl", throwIfNotFound: true);
        m_RobotControl_RotateArmUp = m_RobotControl.FindAction("RotateArmUp", throwIfNotFound: true);
        m_RobotControl_ExtendArm = m_RobotControl.FindAction("ExtendArm", throwIfNotFound: true);
        m_RobotControl_ArmHome = m_RobotControl.FindAction("ArmHome", throwIfNotFound: true);
        m_RobotControl_ArmGridLevel1 = m_RobotControl.FindAction("ArmGridLevel1", throwIfNotFound: true);
        m_RobotControl_ArmGridLevel2 = m_RobotControl.FindAction("ArmGridLevel2", throwIfNotFound: true);
        m_RobotControl_ArmGridLevel3 = m_RobotControl.FindAction("ArmGridLevel3", throwIfNotFound: true);
        m_RobotControl_ArmFloorPickup = m_RobotControl.FindAction("ArmFloorPickup", throwIfNotFound: true);
        m_RobotControl_ArmSubstationPickup = m_RobotControl.FindAction("ArmSubstationPickup", throwIfNotFound: true);
        m_RobotControl_ToggleClaw = m_RobotControl.FindAction("ToggleClaw", throwIfNotFound: true);
        m_RobotControl_AutoSteer = m_RobotControl.FindAction("AutoSteer", throwIfNotFound: true);
        m_RobotControl_Drive2 = m_RobotControl.FindAction("Drive2", throwIfNotFound: true);
        m_RobotControl_Turn = m_RobotControl.FindAction("Turn", throwIfNotFound: true);
        m_RobotControl_Turn2 = m_RobotControl.FindAction("Turn2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RobotControl
    private readonly InputActionMap m_RobotControl;
    private IRobotControlActions m_RobotControlActionsCallbackInterface;
    private readonly InputAction m_RobotControl_RotateArmUp;
    private readonly InputAction m_RobotControl_ExtendArm;
    private readonly InputAction m_RobotControl_ArmHome;
    private readonly InputAction m_RobotControl_ArmGridLevel1;
    private readonly InputAction m_RobotControl_ArmGridLevel2;
    private readonly InputAction m_RobotControl_ArmGridLevel3;
    private readonly InputAction m_RobotControl_ArmFloorPickup;
    private readonly InputAction m_RobotControl_ArmSubstationPickup;
    private readonly InputAction m_RobotControl_ToggleClaw;
    private readonly InputAction m_RobotControl_AutoSteer;
    private readonly InputAction m_RobotControl_Drive2;
    private readonly InputAction m_RobotControl_Turn;
    private readonly InputAction m_RobotControl_Turn2;
    public struct RobotControlActions
    {
        private @RobotActions m_Wrapper;
        public RobotControlActions(@RobotActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @RotateArmUp => m_Wrapper.m_RobotControl_RotateArmUp;
        public InputAction @ExtendArm => m_Wrapper.m_RobotControl_ExtendArm;
        public InputAction @ArmHome => m_Wrapper.m_RobotControl_ArmHome;
        public InputAction @ArmGridLevel1 => m_Wrapper.m_RobotControl_ArmGridLevel1;
        public InputAction @ArmGridLevel2 => m_Wrapper.m_RobotControl_ArmGridLevel2;
        public InputAction @ArmGridLevel3 => m_Wrapper.m_RobotControl_ArmGridLevel3;
        public InputAction @ArmFloorPickup => m_Wrapper.m_RobotControl_ArmFloorPickup;
        public InputAction @ArmSubstationPickup => m_Wrapper.m_RobotControl_ArmSubstationPickup;
        public InputAction @ToggleClaw => m_Wrapper.m_RobotControl_ToggleClaw;
        public InputAction @AutoSteer => m_Wrapper.m_RobotControl_AutoSteer;
        public InputAction @Drive2 => m_Wrapper.m_RobotControl_Drive2;
        public InputAction @Turn => m_Wrapper.m_RobotControl_Turn;
        public InputAction @Turn2 => m_Wrapper.m_RobotControl_Turn2;
        public InputActionMap Get() { return m_Wrapper.m_RobotControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RobotControlActions set) { return set.Get(); }
        public void SetCallbacks(IRobotControlActions instance)
        {
            if (m_Wrapper.m_RobotControlActionsCallbackInterface != null)
            {
                @RotateArmUp.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnRotateArmUp;
                @RotateArmUp.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnRotateArmUp;
                @RotateArmUp.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnRotateArmUp;
                @ExtendArm.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnExtendArm;
                @ExtendArm.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnExtendArm;
                @ExtendArm.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnExtendArm;
                @ArmHome.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmHome;
                @ArmHome.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmHome;
                @ArmHome.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmHome;
                @ArmGridLevel1.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel1;
                @ArmGridLevel1.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel1;
                @ArmGridLevel1.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel1;
                @ArmGridLevel2.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel2;
                @ArmGridLevel2.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel2;
                @ArmGridLevel2.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel2;
                @ArmGridLevel3.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel3;
                @ArmGridLevel3.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel3;
                @ArmGridLevel3.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmGridLevel3;
                @ArmFloorPickup.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmFloorPickup;
                @ArmFloorPickup.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmFloorPickup;
                @ArmFloorPickup.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmFloorPickup;
                @ArmSubstationPickup.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmSubstationPickup;
                @ArmSubstationPickup.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmSubstationPickup;
                @ArmSubstationPickup.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnArmSubstationPickup;
                @ToggleClaw.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnToggleClaw;
                @ToggleClaw.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnToggleClaw;
                @ToggleClaw.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnToggleClaw;
                @AutoSteer.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnAutoSteer;
                @AutoSteer.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnAutoSteer;
                @AutoSteer.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnAutoSteer;
                @Drive2.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnDrive2;
                @Drive2.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnDrive2;
                @Drive2.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnDrive2;
                @Turn.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnTurn;
                @Turn.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnTurn;
                @Turn.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnTurn;
                @Turn2.started -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnTurn2;
                @Turn2.performed -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnTurn2;
                @Turn2.canceled -= m_Wrapper.m_RobotControlActionsCallbackInterface.OnTurn2;
            }
            m_Wrapper.m_RobotControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @RotateArmUp.started += instance.OnRotateArmUp;
                @RotateArmUp.performed += instance.OnRotateArmUp;
                @RotateArmUp.canceled += instance.OnRotateArmUp;
                @ExtendArm.started += instance.OnExtendArm;
                @ExtendArm.performed += instance.OnExtendArm;
                @ExtendArm.canceled += instance.OnExtendArm;
                @ArmHome.started += instance.OnArmHome;
                @ArmHome.performed += instance.OnArmHome;
                @ArmHome.canceled += instance.OnArmHome;
                @ArmGridLevel1.started += instance.OnArmGridLevel1;
                @ArmGridLevel1.performed += instance.OnArmGridLevel1;
                @ArmGridLevel1.canceled += instance.OnArmGridLevel1;
                @ArmGridLevel2.started += instance.OnArmGridLevel2;
                @ArmGridLevel2.performed += instance.OnArmGridLevel2;
                @ArmGridLevel2.canceled += instance.OnArmGridLevel2;
                @ArmGridLevel3.started += instance.OnArmGridLevel3;
                @ArmGridLevel3.performed += instance.OnArmGridLevel3;
                @ArmGridLevel3.canceled += instance.OnArmGridLevel3;
                @ArmFloorPickup.started += instance.OnArmFloorPickup;
                @ArmFloorPickup.performed += instance.OnArmFloorPickup;
                @ArmFloorPickup.canceled += instance.OnArmFloorPickup;
                @ArmSubstationPickup.started += instance.OnArmSubstationPickup;
                @ArmSubstationPickup.performed += instance.OnArmSubstationPickup;
                @ArmSubstationPickup.canceled += instance.OnArmSubstationPickup;
                @ToggleClaw.started += instance.OnToggleClaw;
                @ToggleClaw.performed += instance.OnToggleClaw;
                @ToggleClaw.canceled += instance.OnToggleClaw;
                @AutoSteer.started += instance.OnAutoSteer;
                @AutoSteer.performed += instance.OnAutoSteer;
                @AutoSteer.canceled += instance.OnAutoSteer;
                @Drive2.started += instance.OnDrive2;
                @Drive2.performed += instance.OnDrive2;
                @Drive2.canceled += instance.OnDrive2;
                @Turn.started += instance.OnTurn;
                @Turn.performed += instance.OnTurn;
                @Turn.canceled += instance.OnTurn;
                @Turn2.started += instance.OnTurn2;
                @Turn2.performed += instance.OnTurn2;
                @Turn2.canceled += instance.OnTurn2;
            }
        }
    }
    public RobotControlActions @RobotControl => new RobotControlActions(this);
    private int m_OperatorSchemeIndex = -1;
    public InputControlScheme OperatorScheme
    {
        get
        {
            if (m_OperatorSchemeIndex == -1) m_OperatorSchemeIndex = asset.FindControlSchemeIndex("Operator");
            return asset.controlSchemes[m_OperatorSchemeIndex];
        }
    }
    private int m_DriverSchemeIndex = -1;
    public InputControlScheme DriverScheme
    {
        get
        {
            if (m_DriverSchemeIndex == -1) m_DriverSchemeIndex = asset.FindControlSchemeIndex("Driver");
            return asset.controlSchemes[m_DriverSchemeIndex];
        }
    }
    public interface IRobotControlActions
    {
        void OnRotateArmUp(InputAction.CallbackContext context);
        void OnExtendArm(InputAction.CallbackContext context);
        void OnArmHome(InputAction.CallbackContext context);
        void OnArmGridLevel1(InputAction.CallbackContext context);
        void OnArmGridLevel2(InputAction.CallbackContext context);
        void OnArmGridLevel3(InputAction.CallbackContext context);
        void OnArmFloorPickup(InputAction.CallbackContext context);
        void OnArmSubstationPickup(InputAction.CallbackContext context);
        void OnToggleClaw(InputAction.CallbackContext context);
        void OnAutoSteer(InputAction.CallbackContext context);
        void OnDrive2(InputAction.CallbackContext context);
        void OnTurn(InputAction.CallbackContext context);
        void OnTurn2(InputAction.CallbackContext context);
    }
}
